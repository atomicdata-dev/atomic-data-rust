[
  {
      "@id": "https://atomicdata.dev/classes/Agent",
      "https://atomicdata.dev/properties/description": "An Agent is a user that can create or modify data. It has two keys: a private and a public one. The private key should be kept secret. The public key is used to verify signatures (on [Commits](https://atomicdata.dev/classes/Commit)) set by the of the Agent.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Class"
      ],
      "https://atomicdata.dev/properties/recommends": [
          "https://atomicdata.dev/properties/description"
      ],
      "https://atomicdata.dev/properties/requires": [
          "https://atomicdata.dev/properties/name",
          "https://atomicdata.dev/properties/publicKey"
      ],
      "https://atomicdata.dev/properties/shortname": "agent"
  },
  {
      "@id": "https://atomicdata.dev/classes/Class",
      "https://atomicdata.dev/properties/description": "A Class describes an abstract concept, such as 'Person' or 'Blogpost'. It describes the data shape of data and explains what the thing represents. It is convention to use Uppercase in its URL. Note that in Atomic Data, a Resource can have several Classes - not just a single one.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Class"
      ],
      "https://atomicdata.dev/properties/recommends": [
          "https://atomicdata.dev/properties/recommends",
          "https://atomicdata.dev/properties/requires"
      ],
      "https://atomicdata.dev/properties/requires": [
          "https://atomicdata.dev/properties/description",
          "https://atomicdata.dev/properties/shortname"
      ],
      "https://atomicdata.dev/properties/shortname": "class"
  },
  {
      "@id": "https://atomicdata.dev/classes/Collection",
      "https://atomicdata.dev/properties/description": "A paginated set of resources that can be sorted. Accepts query parameters for setting the current page number, page size, sort attribute, sort direction",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Class"
      ],
      "https://atomicdata.dev/properties/recommends": [
          "https://atomicdata.dev/properties/collection/currentPage",
          "https://atomicdata.dev/properties/collection/members",
          "https://atomicdata.dev/properties/collection/pageSize",
          "https://atomicdata.dev/properties/collection/property",
          "https://atomicdata.dev/properties/collection/totalMembers",
          "https://atomicdata.dev/properties/collection/totalPages",
          "https://atomicdata.dev/properties/collection/value"
      ],
      "https://atomicdata.dev/properties/shortname": "collection"
  },
  {
      "@id": "https://atomicdata.dev/classes/Commit",
      "https://atomicdata.dev/properties/description": "A Commit is a set of changes made to some Resource. It includes information about the one who made the change (the _signer_), and which fields were changes. New or changed fields are _set_, and removed fields are in the _remove_ array. If _destroy_ is set to true, the Resource will be removed entirely. Commits are signed using a crypographic proof, which means that they are verfifiable. A signature is made through a deterministic process, in which the Commit is serialized as a JSON-AD object, sorted alphabetically and is rid from any spaces an newlines.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Class"
      ],
      "https://atomicdata.dev/properties/recommends": [
          "https://atomicdata.dev/properties/destroy",
          "https://atomicdata.dev/properties/remove",
          "https://atomicdata.dev/properties/set"
      ],
      "https://atomicdata.dev/properties/requires": [
          "https://atomicdata.dev/properties/createdAt",
          "https://atomicdata.dev/properties/signature",
          "https://atomicdata.dev/properties/signer",
          "https://atomicdata.dev/properties/subject"
      ],
      "https://atomicdata.dev/properties/shortname": "commit"
  },
  {
      "@id": "https://atomicdata.dev/classes/Datatype",
      "https://atomicdata.dev/properties/description": "A Datatype describes a possible type of value, such as 'string' or 'integer'.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Class"
      ],
      "https://atomicdata.dev/properties/requires": [
          "https://atomicdata.dev/properties/description",
          "https://atomicdata.dev/properties/shortname"
      ],
      "https://atomicdata.dev/properties/shortname": "datatype"
  },
  {
      "@id": "https://atomicdata.dev/classes/Drive",
      "https://atomicdata.dev/properties/description": "The Drive node is at the top of the hierarchy. It can be thought of as a hard drive, at the top of a filesystem. It can be used as a starting point to navigate to any Resource. ",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Class"
      ],
      "https://atomicdata.dev/properties/recommends": [
          "https://atomicdata.dev/properties/description"
      ],
      "https://atomicdata.dev/properties/shortname": "agent"
  },
  {
      "@id": "https://atomicdata.dev/classes/Endpoint",
      "https://atomicdata.dev/properties/description": "An API endpoint at some path which accepts requests and returns some Resource.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Class"
      ],
      "https://atomicdata.dev/properties/requires": [
          "https://atomicdata.dev/properties/description",
          "https://atomicdata.dev/properties/endpoint/parameters"
      ],
      "https://atomicdata.dev/properties/shortname": "endpoint"
  },
  {
      "@id": "https://atomicdata.dev/classes/Property",
      "https://atomicdata.dev/properties/description": "A Property is a single field in a Class. It's the thing that a property field in an Atom points to. An example is `birthdate`. An instance of Property requires various Properties, most notably a `datatype` (e.g. `string` or `integer`), a human readable `description` (such as the thing you're reading), and a `shortname`.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Class"
      ],
      "https://atomicdata.dev/properties/recommends": [
          "https://atomicdata.dev/properties/classtype"
      ],
      "https://atomicdata.dev/properties/requires": [
          "https://atomicdata.dev/properties/datatype",
          "https://atomicdata.dev/properties/description",
          "https://atomicdata.dev/properties/shortname"
      ],
      "https://atomicdata.dev/properties/shortname": "property"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "A URL that points to an Atomic Data resource. When a HTTP(S) GET request is sent to that URL with an `Accept: application/ad3` header, the server should reply with MIME type `application/ad3`, and a body with valid AD3 describing the entire resource, with all Atoms.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "atomic-url"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/boolean",
      "https://atomicdata.dev/properties/description": "Either 'true' or 'false'.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "boolean"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/date",
      "https://atomicdata.dev/properties/description": "ISO date _without time_.\nYYYY-MM-DD.\n\ne.g. `1991-01-20`\n.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "date"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/float",
      "https://atomicdata.dev/properties/description": "Number with a comma / decimal place. Not an integer. Serialized as string with a dot `1.123`.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "float"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/integer",
      "https://atomicdata.dev/properties/description": "Signed Integer, max 64 bit.\nMax value: [`9223372036854775807`](https://en.wikipedia.org/wiki/9,223,372,036,854,775,807)\n\ne.g. `-420`\n",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "integer"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/markdown",
      "https://atomicdata.dev/properties/description": "Markdown UTF-8 String with [Commonmark syntax](https://commonmark.org/). [Here's a tutorial](https://commonmark.org/help/tutorial/).",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "markdown"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/resourceArray",
      "https://atomicdata.dev/properties/description": "A JSON serialized array of Atomic URL strings. All the ",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "resource-array"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/slug",
      "https://atomicdata.dev/properties/description": "Lowercase string without spaces. Only characters, numbers and dashes: `-`. These are used for things like JSON keys.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "slug"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/string",
      "https://atomicdata.dev/properties/description": "A UTF-8 string. Allows newlines with `\n`. This is a generic string datatype - don't use this for things like [markdown](https://atomicdata.dev/datatypes/markdown) or html.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "string"
  },
  {
      "@id": "https://atomicdata.dev/datatypes/timestamp",
      "https://atomicdata.dev/properties/description": "Similar to [Unix Timestamp](https://www.unixtimestamp.com/).\nMilliseconds since midnight UTC 1970 jan 01 (aka the [Unix Epoch](https://en.wikipedia.org/wiki/Unix_time)).\nUse this for most DateTime fields.\nSigned 64 bit integer (instead of 32 bit in Unix systems).\n\ne.g. `1596798919` (= 07 Aug 2020 11:15:19)",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Datatype"
      ],
      "https://atomicdata.dev/properties/shortname": "timestamp"
  },
  {
      "@id": "https://atomicdata.dev/properties/classtype",
      "https://atomicdata.dev/properties/classtype": "https://atomicdata.dev/classes/Class",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "The class-type indicates that the Atomic URL should be an instance of this class.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "classtype"
  },
  {
      "@id": "https://atomicdata.dev/properties/collection/currentPage",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/integer",
      "https://atomicdata.dev/properties/description": "The current page number of the collection. Defaults to 0.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "current-page"
  },
  {
      "@id": "https://atomicdata.dev/properties/collection/members",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/resourceArray",
      "https://atomicdata.dev/properties/description": "The members are the list of resources in a collection.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "members"
  },
  {
      "@id": "https://atomicdata.dev/properties/collection/pageSize",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/integer",
      "https://atomicdata.dev/properties/description": "The maximum number of members per page.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "page-size"
  },
  {
      "@id": "https://atomicdata.dev/properties/collection/property",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "Filter collection by the Property of Atoms. The property is the second field of an atom. Similar to `predicate` in RDF.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "property"
  },
  {
      "@id": "https://atomicdata.dev/properties/collection/subject",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "Filter collection by the Subject of Atoms. The subject is the first field of an atom.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "subject"
  },
  {
      "@id": "https://atomicdata.dev/properties/collection/totalMembers",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/integer",
      "https://atomicdata.dev/properties/description": "The count of items (members) in the collection.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "total-members"
  },
  {
      "@id": "https://atomicdata.dev/properties/collection/totalPages",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/integer",
      "https://atomicdata.dev/properties/description": "The total number of pages in the collection.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "total-pages"
  },
  {
      "@id": "https://atomicdata.dev/properties/collection/value",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "Filter collection by the Value of Atoms. The Value is the third field of an Atom. Similar to `object` in RDF.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "value"
  },
  {
      "@id": "https://atomicdata.dev/properties/createdAt",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/timestamp",
      "https://atomicdata.dev/properties/description": "Timestamp when the Commit was created (usually when it was signed).",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "created-at"
  },
  {
      "@id": "https://atomicdata.dev/properties/datatype",
      "https://atomicdata.dev/properties/classtype": "https://atomicdata.dev/classes/Datatype",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "The Datatype of a property, such as String or Timestamp.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "datatype"
  },
  {
      "@id": "https://atomicdata.dev/properties/description",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/markdown",
      "https://atomicdata.dev/properties/description": "A textual description of something. When making a description, make sure that the first few words tell the most important part. Give examples. Since the text supports markdown, you're free to use links and more.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "description"
  },
  {
      "@id": "https://atomicdata.dev/properties/destroy",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/boolean",
      "https://atomicdata.dev/properties/description": "If set to true, the entire Subject resource will be removed in this commit. This will be executed _before_ other commands, such as set.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "destroy"
  },
  {
      "@id": "https://atomicdata.dev/properties/endpoint/parameters",
      "https://atomicdata.dev/properties/classtype": "https://atomicdata.dev/classes/Property",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/resourceArray",
      "https://atomicdata.dev/properties/description": "The query parameters of the endpoint",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "parameters"
  },
  {
      "@id": "https://atomicdata.dev/properties/isA",
      "https://atomicdata.dev/properties/classtype": "https://atomicdata.dev/classes/Class",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/resourceArray",
      "https://atomicdata.dev/properties/description": "A list of Classes of which the thing is an instance of. The Classes of a Resource determine which Properties are recommended and required.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "is-a"
  },
  {
      "@id": "https://atomicdata.dev/properties/name",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/string",
      "https://atomicdata.dev/properties/description": "The name of a thing or person.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "name"
  },
  {
      "@id": "https://atomicdata.dev/properties/parent",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "The parent of a Resource sets the hierarchical structure of the Resource, and therefore also the rights / grants.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "parent"
  },
  {
      "@id": "https://atomicdata.dev/properties/path",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/string",
      "https://atomicdata.dev/properties/description": "An Atomic Path is a string that starts with the URL of some Atomic Resource, followed by one or multiple other Property URLs or Property Shortnames. It resolves to one specific Resource or Value.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "path"
  },
  {
      "@id": "https://atomicdata.dev/properties/publicKey",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/string",
      "https://atomicdata.dev/properties/description": "The publicKey of an Agent. Is a base64 serialized Ed25519 key.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "public-key"
  },
  {
      "@id": "https://atomicdata.dev/properties/recommends",
      "https://atomicdata.dev/properties/classtype": "https://atomicdata.dev/classes/Property",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/resourceArray",
      "https://atomicdata.dev/properties/description": "The Properties that are not required, but recommended for this Class.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "recommends"
  },
  {
      "@id": "https://atomicdata.dev/properties/remove",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/resourceArray",
      "https://atomicdata.dev/properties/description": "A list of property URLs that should be removed from the resource. ",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "remove"
  },
  {
      "@id": "https://atomicdata.dev/properties/requires",
      "https://atomicdata.dev/properties/classtype": "https://atomicdata.dev/classes/Property",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/resourceArray",
      "https://atomicdata.dev/properties/description": "The Properties that are required for each instance of this Class.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "requires"
  },
  {
      "@id": "https://atomicdata.dev/properties/set",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "Every single Atom from this resource will be added to the Subject resource. If the Property existed before, it will be overwritten.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "set"
  },
  {
      "@id": "https://atomicdata.dev/properties/shortname",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/slug",
      "https://atomicdata.dev/properties/description": "A short name of something. It can only contain letters, numbers and dashes `-`. Use dashes to denote spaces between words. Not case sensitive - lowercase only. Useful in programming contexts where the user should be able to type something short to identify a specific thing.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "shortname"
  },
  {
      "@id": "https://atomicdata.dev/properties/signature",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/string",
      "https://atomicdata.dev/properties/description": "The signature proves that a Commit is created by a specific Agent. It is a cryptographic proof - an RSA signature of the JSON serialized commit, minus the signature.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "signature"
  },
  {
      "@id": "https://atomicdata.dev/properties/signer",
      "https://atomicdata.dev/properties/classtype": "https://atomicdata.dev/classes/Agent",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "The signer is the agent (person, organization or something else) that issued the commit.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "signer"
  },
  {
      "@id": "https://atomicdata.dev/properties/subject",
      "https://atomicdata.dev/properties/datatype": "https://atomicdata.dev/datatypes/atomicURL",
      "https://atomicdata.dev/properties/description": "The subject of a Delta - the resource ID that is being changed.",
      "https://atomicdata.dev/properties/isA": [
          "https://atomicdata.dev/classes/Property"
      ],
      "https://atomicdata.dev/properties/shortname": "subject"
  }
]
